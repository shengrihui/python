填空题
1、Python安装扩展库常用的是_______工具。（pip）
2、Python标准库math中用来计算平方根的函数是__________。（sqrt）
3、Python程序文件扩展名主要有__________和________两种，其中后者常用于GUI程序。（py、pyw）
4、Python源代码程序编译后的文件扩展名为_________。（pyc）
5、使用pip工具升级科学计算扩展库numpy的完整命令是_________________。（pip install --upgrade numpy）
6、使用pip工具查看当前已安装的Python扩展库的完整命令是_____________。（pip list）
7、在IDLE交互模式中浏览上一条语句的快捷键是__________。（Alt+P）
8、使用pip工具查看当前已安装Python扩展库列表的完整命令是_________。（pip list）
9、在Python中__________表示空类型。（None）
10、列表、元组、字符串是Python的_________(有序？无序)序列。（有序）
11、查看变量类型的Python内置函数是________________。（type()）
12、查看变量内存地址的Python内置函数是_________________。（id()）
13、以3为实部4为虚部，Python复数的表达形式为___________或________。（3+4j、3+4J）
14、Python运算符中用来计算整商的是_________。（//）
15、Python运算符中用来计算集合并集的是_______。（|）
16、使用运算符测试集合包含集合A是否为集合B的真子集的表达式可以写作_______。（A<B）
17、表达式[1, 2, 3]*3的执行结果为______________________。（[1, 2, 3, 1, 2, 3, 1, 2, 3]）
18、list(map(str, [1, 2, 3]))的执行结果为_____________________。（[‘1’, ‘2’, ‘3’]）
19、语句x = 3==3, 5执行结束后，变量x的值为_____________。（(True, 5））
20、已知 x = 3，那么执行语句  x += 6 之后，x的值为_______________。（9）
21、已知 x = 3，并且id(x)的返回值为 496103280，那么执行语句 x += 6 之后，表达式 id(x) == 496103280 的值为___________。（False）
22、已知 x = 3，那么执行语句 x *= 6 之后，x的值为________________。（18）
23、为了提高Python代码运行速度和进行适当的保密，可以将Python程序文件编译为扩展名__________的文件。（pyc）
24、表达式“[3] in [1, 2, 3, 4]”的值为________________。（False）
25、列表对象的sort()方法用来对列表元素进行原地排序，该函数返回值为     。（None）
26、假设列表对象aList的值为[3, 4, 5, 6, 7, 9, 11, 13, 15, 17]，那么切片aList[3:7]得到的值是______________________。（[6, 7, 9, 11]）
27、使用列表推导式生成包含10个数字5的列表，语句可以写为_______________。（[5 for i in range(10)]）
28、假设有列表a = ['name', 'age', 'sex']和b = ['Dong', 38, 'Male']，请使用一个语句将这两个列表的内容转换为字典，并且以列表a中的元素为“键”，以列表b中的元素为“值”，这个语句可以写为_____________________。（c = dict(zip(a, b))）
29、任意长度的Python列表、元组和字符串中最后一个元素的下标为________。（-1）
30、Python语句''.join(list('hello world!'))执行的结果是____________________。（'hello world!'）
31、转义字符’\n’的含义是___________________。（回车换行）
32、Python语句list(range(1,10,3))执行结果为___________________。（[1, 4, 7]）
33、表达式 list(range(5)) 的值为________________。（[0, 1, 2, 3, 4]）
34、______________命令既可以删除列表中的一个元素，也可以删除整个列表。（del）
35、已知a = [1, 2, 3]和b = [1, 2, 4]，那么id(a[1])==id(b[1])的执行结果为___________。（True）
36、表达式 int('123', 16) 的值为_________。（291）
37、表达式 int('123', 8) 的值为_________。（83）
38、表达式 int('123') 的值为_____________。（123）
39、表达式 int('101',2) 的值为__________。（5）
40、表达式 abs(-3) 的值为___________。（3）
41、切片操作list(range(6))[::2]执行结果为________________。（[0, 2, 4]）
42、使用切片操作在列表对象x的开始处增加一个元素3的代码为_________。（x[0:0] = [3]）
43、语句sorted([1, 2, 3], reverse=True) == reversed([1, 2, 3])执行结果为_________。（False）
44、表达式 'ab' in 'acbed' 的值为________。（False）
45、Python 3.x语句 print(1, 2, 3, sep=':') 的输出结果为____________。（1:2:3）
46、表达式 sorted([111, 2, 33], key=lambda x: len(str(x))) 的值为________________。（[2, 33, 111]）
47、假设n为整数，那么表达式 n&1 == n%2 的值为_____________。（True）
48、表达式 int(4**0.5) 的值为____________。（2）
49、达式 sorted([111, 2, 33], key=lambda x: -len(str(x))) 的值为____________。（[111, 33, 2]）
50、Python内置函数_________可以返回列表、元组、字典、集合、字符串以及range对象中元素个数。（len()）
51、Python内置函数____________用来返回序列中的最大元素。（max()）
52、Python内置函数____________用来返回序列中的最小元素。（min()）
53、Python内置函数________________用来返回数值型序列中所有元素之和。（sum()）
54、已知列表对象x = ['11', '2', '3']，则表达式 max(x) 的值为___________。（'3'）
55、表达式 min(['11', '2', '3']) 的值为_________________。（'11'）
56、已知列表对象x = ['11', '2', '3']，则表达式max(x, key=len) 的值为___________。（'11'）
57、语句 x = (3,) 执行后x的值为_______________。（(3,)）
58、语句 x = (3) 执行后x的值为________________。（3）
59、已知x=3和y=5，执行语句 x, y = y, x 后x的值是____。（5）
60、可以使用内置函数_______________查看包含当前作用域内所有全局变量和值的字典。（globals()）
61、可以使用内置函数___________________查看包含当前作用域内所有局部变量和值的字典。（locals()(）
62、字典中多个元素之间使用____________分隔开，每个元素的“键”与“值”之间使用________分隔开。（逗号、冒号）
63、字典对象的___________方法可以获取指定“键”对应的“值”，并且可以在指定“键”不存在的时候返回指定值，如果不指定则返回None。（get()）
64、字典对象的_____________方法返回字典中的“键-值对”列表。（items()）
65、字典对象的____________方法返回字典的“键”列表。（keys()）
66、字典对象的______________方法返回字典的“值”列表。（values()）
67、已知 x = {1:2}，那么执行语句 x[2] = 3之后，x的值为________________。（{1: 2, 2: 3}）
68、表达式 {1, 2, 3, 4} - {3, 4, 5, 6}的值为__________________。（{1, 2}）
69、表达式set([1, 1, 2, 3])的值为____________________。（{1, 2, 3}）
70、关键字__________用于测试一个对象是否是一个可迭代对象的元素。（in）
71、使用列表推导式得到100以内所有能被13整除的数的代码可以写作___________________________________。（[i for i in range(100) if i%13==0]）
72、表达式 3<5>2 的值为_______________。（True）
73、已知 x = {'a':'b', 'c':'d'}，那么表达式 'a' in x 的值为______________。（True）
74、已知 x = {'a':'b', 'c':'d'}，那么表达式 'b' in x 的值为______________。（False）
75、已知 x = {'a':'b', 'c':'d'}，那么表达式 'b' in x.values() 的值为______________。（True）
76、表达式 1<2<3 的值为_________。（True）
77、表达式 3 or 5 的值为________。（3）
78、表达式 0 or 5 的值为_________。（5）
79、表达式 3 and 5 的值为____________。（5）
80、表达式 3 and not 5 的值为______________。（False）
81、表达式 3 | 5 的值为__________。（7）
82、表达式 3 & 6 的值为_________。（2）
83、表达式 3 ** 2 的值为_________。（9）
84、表达式 3 * 2的值为___________。（6）
85、已知 x = [3, 5, 7]，那么表达式 x[10:]的值为____________。（[]）
86、已知 x = [3, 5, 7]，那么执行语句 x[len(x):] = [1, 2]之后，x的值为______________。（[3, 5, 7, 1, 2]）
87、已知 x = [3, 7, 5]，那么执行语句 x.sort(reverse=True)之后，x的值为_________________。（[7, 5, 3]）
88、已知 x = [3, 7, 5]，那么执行语句 x = x.sort(reverse=True)之后，x的值为_________。（None）
89、已知 x = [1, 11, 111]，那么执行语句 x.sort(key=lambda x: len(str(x)), reverse=True) 之后，x的值为__________________。（[111, 11, 1]）
90、表达式 list(zip([1,2], [3,4])) 的值为________________________。（[(1, 3), (2, 4)]）
91、已知 x = [1, 2, 3, 2, 3]，执行语句 x.pop() 之后，x的值为_____________。（[1, 2, 3, 2]）
92、表达式 list(map(list,zip(*[[1, 2, 3], [4, 5, 6]]))) 的值为________________。（[[1, 4], [2, 5], [3, 6]]）
93、表达式 [x for x in [1,2,3,4,5] if x<3] 的值为_____________________。（[1, 2]）
94、表达式 [index for index, value in enumerate([3,5,7,3,7]) if value == max([3,5,7,3,7])] 的值为__________________。（[2, 4]）
95、已知 x = [3,5,3,7]，那么表达式 [x.index(i) for i in x if i==3] 的值为______________。（[0, 0]）
96、已知列表 x = [1, 2]，那么表达式 list(enumerate(x)) 的值为_______________。（[(0, 1), (1, 2)]）
97、已知 vec = [[1,2], [3,4]]，则表达式 [col for row in vec for col in row] 的值为__________________________。（[1, 2, 3, 4]）
98、已知 vec = [[1,2], [3,4]]，则表达式 [[row[i] for row in vec] for i in range(len(vec[0]))] 的值为_________________________。（[[1, 3], [2, 4]]）
99、已知 x = list(range(10))，则表达式 x[-4:] 的值为__________。（[6, 7, 8, 9]）
100、已知 path = r'c:\test.html'，那么表达式 path[:-4]+'htm' 的值为__________。（'c:\\test.htm'）
101、已知 x = [3, 5, 7]，那么执行语句 x[1:] = [2]之后，x的值为________________。（[3, 2]）
102、已知 x = [3, 5, 7]，那么执行语句 x[:3] = [2]之后，x的值为________________。（[ 2]）
103、已知x为非空列表，那么执行语句y = x[:]之后，id(x[0]) == id(y[0])的值为__________。（True）
104、已知 x = [1, 2, 3, 2, 3]，执行语句 x.remove(2) 之后，x的值为____________。（[1, 3, 2, 3]）
105、表达式 3<<2 的值为_______________。（12）
106、表达式 65 >> 1 的值为_____________。（32）
107、表达式 chr(ord('a')^32) 的值为___________。（'A'）
108、表达式 chr(ord('a')-32) 的值为___________。（'A'）
109、表达式 abs(3+4j) 的值为____________。（5.0）
110、表达式 callable(int) 的值为___________。（True）
111、表达式 list(str([1,2,3])) == [1,2,3] 的值为______________。（False）
112、表达式 str([1, 2, 3]) 的值为__________________。（'[1, 2, 3]'）
113、表达式 str((1, 2, 3)) 的值为__________________。（'(1, 2, 3)'）
114、Python中用于表示逻辑与、逻辑或、逻辑非运算的关键字分别是_________、___________、_________。（and、or、not）
115、Python 3.x语句 for i in range(3):print(i, end=',') 的输出结果为_____________________。（0,1,2,）
116、Python 3.x语句 print(1, 2, 3, sep=',') 的输出结果为________________。（1,2,3）
117、对于带有else子句的for循环和while循环，当循环因循环条件不成立而自然结束时________(会？不会？)执行else中的代码。（会）
118、在循环语句中，__________语句的作用是提前结束本层循环。（break）
119、在循环语句中，_______语句的作用是提前进入下一次循环。（continue）
120、表达式 sum(range(1, 10, 2)) 的值为____________。（25）
121、表达式 sum(range(1, 10)) 的值为_____________。（45）
122、表达式 '%c'%65 的值为_________。（'A'）
123、表达式 '%s'%65 的值为__________。（'65'）
124、表达式 '%d,%c' % (65, 65) 的值为________。（'65,A'）
125、表达式 'The first:{1}, the second is {0}'.format(65,97) 的值为______________________________。（'The first:97, the second is 65'）
126、表达式 '{0:#d},{0:#x},{0:#o}'.format(65) 的值为_____________。（'65,0x41,0o101'）
127、表达式 isinstance('abcdefg', str) 的值为____________。（True）
128、表达式 isinstance('abcdefg', object) 的值为_____________。（True）
129、表达式 isinstance(3, object) 的值为_____________。（True）
130、表达式 'abcabcabc'.rindex('abc') 的值为____________。（6）
131、表达式 ':'.join('abcdefg'.split('cd')) 的值为______________。（'ab:efg'）
132、表达式 'Hello world. I like Python.'.rfind('python') 的值为________。（-1）
133、表达式 'abcabcabc'.count('abc') 的值为_____________。（3）
134、表达式 'apple.peach,banana,pear'.find('p') 的值为______________。（1）
135、表达式 'apple.peach,banana,pear'.find('ppp') 的值为________。（-1）
136、表达式 'abcdefg'.split('d') 的值为__________________。（['abc', 'efg']）
137、表达式 ':'.join('1,2,3,4,5'.split(',')) 的值为__________________。（'1:2:3:4:5'）
138、表达式 ','.join('a     b  ccc\n\n\nddd     '.split()) 的值为______________。（'a,b,ccc,ddd'）
139、表达式 'Hello world'.upper() 的值为___________。（'HELLO WORLD'）
140、表达式 'Hello world'.lower() 的值为_____________。（'hello world'）
141、表达式 'Hello world'.lower().upper() 的值为___________。（'HELLO WORLD'）
142、表达式 'Hello world'.swapcase().swapcase() 的值为______________。（'Hello world'）
143、表达式 r'c:\windows\notepad.exe'.endswith('.exe') 的值为_____________。（True）
144、表达式 r'c:\windows\notepad.exe'.endswith(('.jpg', '.exe')) 的值为_______。（True）
145、表达式 'C:\\Windows\\notepad.exe'.startswith('C:') 的值为_________。（True）
146、表达式 len('Hello world!'.ljust(20)) 的值为_________。（20）
147、表达式 len('abcdefg'.ljust(3)) 的值为_________。（7）
148、表达式 len([i for i in range(10)]) 的值为__________。（10）
149、表达式 len(range(1,10)) 的值为_____________。（9）
150、表达式 range(10)[-1] 的值为____________。（9）
151、表达式 range(10,20)[4] 的值为__________。（14）
152、表达式 round(3.4) 的值为___________。（3）
153、表达式 round(3.7) 的值为_________。（4）
154、表达式 'a' + 'b' 的值为_____________。（'ab'）
155、已知 x = '123' 和 y = '456'，那么表达式 x + y 的值为______________。（'123456'）
156、表达式 'a'.join('abc'.partition('a')) 的值为________________。（'aaabc'）
157、表达式 re.split('\.+', 'alpha.beta...gamma..delta') 的值为_______________________。（['alpha', 'beta', 'gamma', 'delta']）
158、已知 x = 'a234b123c'，并且re模块已导入，则表达式 re.split('\d+', x) 的值为_________________。（['a', 'b', 'c']）
159、表达式 ''.join('asdssfff'.split('sd')) 的值为____________。（'assfff'）
160、表达式 ''.join(re.split('[sd]','asdssfff')) 的值为_______________。（'afff'）
161、假设re模块已导入，那么表达式 re.findall('(\d)\\1+', '33abcd112') 的值为___________________。（['3', '1']）
162、语句 print(re.match('abc', 'defg')) 输出结果为_____________。（None）
163、表达式 'Hello world!'[-4] 的值为________________。（'r'）
164、表达式 'Hello world!'[-4:] 的值为________________。（'rld!'）
165、表达式 'test.py'.endswith(('.py', '.pyw')) 的值为__________。（True）
166、已知 x = (3)， 那么表达式 x * 3 的值为__________。（9）
167、已知 x = (3,)，那么表达式 x * 3 的值为_____________。（(3, 3, 3)）
168、表达式 len('abc'.ljust(20)) 的值为______________。（20）
169、代码 print(re.match('^[a-zA-Z]+$','abcDEFG000')) 的输出结果为_________。（None）
170、当在字符串前加上小写字母_____或大写字母_____表示原始字符串，不对其中的任何字符进行转义。（r、R）
171、在设计正则表达式时，字符_______紧随任何其他限定符(*、+、?、{n}、{n,}、{n,m})之后时，匹配模式是“非贪心的”，匹配搜索到的、尽可能短的字符串。（?）
172、假设正则表达式模块re已导入，那么表达式 re.sub('\d+', '1', 'a12345bbbb67c890d0e') 的值为_____________________。（'a1bbbb1c1d1e'）
173、假设列表对象x = [1, 1, 1]，那么表达式id(x[0]) == id(x[2])的值为_____________。（True）
174、已知列表 x = list(range(10))，那么执行语句 del x[::2]之后，x的值为_________。（[1, 3, 5, 7, 9]）
175、已知列表 x = [1, 2, 3, 4]，那么执行语句 del x[1] 之后x的值为____________。（[1, 3, 4]）
176、表达式 [1] * 2 的值为_________________。（[1, 1]）
177、表达式 [1, 2] * 2 的值为______________。（[1, 2, 1, 2]）
178、已知列表 x = [1, 2, 3]，那么执行语句 x.insert(1, 4) 只有，x的值为___________。（[1, 4, 2, 3]）
179、已知列表 x = [1, 2, 3]，那么执行语句 x.insert(0, 4) 只有，x的值为___________。（[4, 1, 2, 3]）
180、已知列表 x = [1, 2, 3]，那么执行语句 x.pop(0) 之后，x的值为_________。（[2, 3]）
181、已知 x = [[1]] * 3，那么执行语句 x[0][0] = 5之后，变量x的值为________________。（[[5], [5], [5]]）
182、表达式 list(map(lambda x: x+5, [1, 2, 3, 4, 5])) 的值为______________________。（[6, 7, 8, 9, 10]）
183、表达式 {1, 2, 3, 4, 5} ^ {4, 5, 6, 7} 的值为_________________________。（{1, 2, 3, 6, 7}）
184、表达式  5 if 5>6 else (6 if 3>2 else 5) 的值为_________。（6）
185、已知 x = [1, 2, 3]，那么执行语句 x[len(x)-1:] = [4, 5, 6]之后，变量x的值为_________________________________。（[1, 2, 4, 5, 6]）
186、表达式 len(range(1, 10)) 的值为___________。（9）
187、表达式 len('中国'.encode('utf-8')) 的值为___________。（6）
188、表达式 len('中国'.encode('gbk')) 的值为____________。（4）
189、表达式 chr(ord('A')+2) 的值为__________。（'C'）
190、已知x是一个列表对象，那么执行语句 y = x[:] 之后表达式 id(x) == id(y) 的值为___________。（False）
191、表达式 sorted([13, 1, 237, 89, 100], key=lambda x: len(str(x))) 的值为___________________________________。（[1, 13, 89, 237, 100]）
192、Python中定义函数的关键字是_________________。（def）
193、在函数内部可以通过关键字________________来定义全局变量。（global）
194、如果函数中没有return语句或者return语句不带任何返回值，那么该函数的返回值为_________________。（None）
195、表达式 sum(range(10)) 的值为________________。（45）
196、表达式 sum(range(1, 10, 2)) 的值为____________。（25）
197、表达式 'abcab'.replace('a','yy') 的值为___________。（'yybcyyb'）
198、已知 table = ''.maketrans('abcw', 'xyzc')，那么表达式 'Hellow world'.translate(table) 的值为______________________。（'Helloc corld'）
199、表达式 'hello world, hellow every one'.replace('hello', 'hi') 的值为________________________。（'hi world, hiw every one'）
200、已知字符串 x = 'hello world'，那么执行语句 x.replace('hello', 'hi') 之后，x的值为____________。（'hello world'）
201、正则表达式元字符________用来表示该符号前面的字符或子模式1次或多次出现。（+）
202、已知 x = 'a   b c     d'，那么表达式 ','.join(x.split()) 的值为___________。（'a,b,c,d'）
203、正则表达式元字符________用来表示该符号前面的字符或子模式0次或多次出现。（*）
204、表达式 'abcab'.strip('ab') 的值为__________。（'c'）
205、表达式 [str(i) for i in range(3)] 的值为____________。（['0', '1', '2']）
206、表达式 'abc.txt'.endswith(('.txt', '.doc', '.jpg')) 的值为___________。（True）
207、表达式 list(filter(None, [0,1,2,3,0,0])) 的值为___________________。（[1, 2, 3]）
208、表达式 list(filter(lambda x:x>2, [0,1,2,3,0,0])) 的值为_________。（[3]）
209、表达式 list(range(50, 60, 3)) 的值为_______________________。（[50, 53, 56, 59]）
210、表达式 list(filter(lambda x: x%2==0, range(10))) 的值为__________________________。（[0, 2, 4, 6, 8]）
211、表达式 list(filter(lambda x: len(x)>3, ['a', 'b', 'abcd'])) 的值为___________。（['abcd']）
212、Python使用_________________关键字来定义类。（class）
213、表达式 isinstance('abc', str) 的值为________________。（True）
214、表达式 isinstance('abc', int) 的值为_______________。（False）
215、表达式 isinstance(4j, (int, float, complex)) 的值为_____________。（True）
216、表达式 isinstance('4', (int, float, complex)) 的值为_____________。（False）
217、表达式 type(3) in (int, float, complex) 的值为____________。（True）
218、表达式 type(3.0) in (int, float, complex) 的值为____________。（True）
219、表达式 type(3+4j) in (int, float, complex) 的值为____________。（True）
220、表达式 type('3') in (int, float, complex) 的值为____________。（False）
221、表达式 type(3) == int 的值为__________。（True）
222、代码 print(1,2,3,sep=':') 的执行结果为__________________。（1:2:3）
223、代码 for i in range(3):print(i, end=',') 的执行结果为_________________。（0,1,2,）
224、表达式 eval('''__import__('math').sqrt(9)''') 的值为______________。（3.0）
225、表达式 eval('''__import__('math').sqrt(3**2+4**2)''') 的值为_________。（5.0）
226、表达式 eval('3+5') 的值为_________________。（8）
227、表达式 eval('[1, 2, 3]') 的值为__________________。（[1, 2, 3]）
228、假设math标准库已导入，那么表达式 eval('math.sqrt(4)') 的值为_________。（2.0）
229、已知x为非空列表，那么表达式 random.choice(x) in x 的值为___________。（True）
230、表达式 'abc10'.isalnum() 的值为______________。（True）
231、表达式 'abc10'.isalpha() 的值为________________。（False）
232、表达式 'abc10'.isdigit() 的值为__________________。（False）
233、表达式 [1,2,3].count(4) 的值为_______________。（0）
234、Python标准库random中的___________方法作用是从序列中随机选择1个元素。（choice()）
235、表达式 'C:\\windows\\notepad.exe'.endswith('.exe') 的值为________。（True）
236、Python标准库random中的sample(seq, k)方法作用是从序列中选择________(重复？不重复？)的k个元素。（不重复）
237、random模块中_____________方法的作用是将列表中的元素随机乱序。（shuffle()）
238、Python关键字elif表示__________和___________两个单词的缩写。（else、if）
239、执行代码 x, y, z = sorted([1, 3, 2]) 之后，变量y的值为______。（2）
240、已知 x = {1:2, 2:3}，那么表达式 x.get(3, 4) 的值为____。（4）
241、已知 x = {1:2, 2:3}，那么表达式 x.get(2, 4) 的值为______。（3）
242、表达式 {1, 2, 3} | {3, 4, 5} 的值为_____________________。（{1, 2, 3, 4, 5}）
243、表达式 {1, 2, 3} | {2, 3, 4} 的值为______________________。（{1, 2, 3, 4}）
244、表达式 {1, 2, 3} & {3, 4, 5} 的值为______________。（{3}）
245、表达式 {1, 2, 3} & {2, 3, 4} 的值为___________。（{2, 3}）
246、表达式 {1, 2, 3} - {3, 4, 5} 的值为_________。（{1, 2}）
247、表达式 {1, 2, 3} < {3, 4, 5} 的值为_________。（False）
248、表达式 {1, 2, 3} < {1, 2, 4} 的值为___________。（False）
249、表达式 '%s'%[1,2,3] 的值为_____________。（'[1, 2, 3]'）
250、在Python定义类时，与运算符“**”对应的特殊方法名为 _____________。（__pow__()）
251、在Python中定义类时，与运算符“//”对应的特殊方法名为_______________。（__floordiv__()）
252、对文件进行写入操作之后，_______________方法用来在不关闭文件对象的情况下将缓冲区内容写入文件。（flush()）
253、Python内置函数_____________用来打开或创建文件并返回文件对象。（open()）
254、使用上下文管理关键字______________可以自动管理文件对象，不论何种原因结束该关键字中的语句块，都能保证文件被正确关闭。（with）
255、Python标准库os中用来列出指定文件夹中的文件和子文件夹列表的方式是____________。（listdir()）
256、Python标准库os.path中用来判断指定文件是否存在的方法是______________。（exists()）
257、Python标准库os.path中用来判断指定路径是否为文件的方法是_______________。（isfile()）
258、Python标准库os.path中用来判断指定路径是否为文件夹的方法是______________。（isdir()）
259、Python标准库os.path中用来分割指定路径中的文件扩展名的方法是__________。（splitext()）
260、Python内建异常类的基类是________________。（BaseException）
261、Python扩展库_____________支持Excel 2007或更高版本文件的读写操作。（openpyxl）
262、Python标准库____________中提供了计算MD5摘要的方法md5()。（hashlib）
263、表达式 len('SDIBT') 的值为__________。（5）
264、表达式 'Hello world!'.count('l') 的值为___________。（3）
265、表达式 (1, 2, 3)+(4, 5) 的值为__________________。（(1, 2, 3, 4, 5)）
266、表达式 dict(zip([1, 2], [3, 4])) 的值为_________________________________。（{1: 3, 2: 4}）
267、已知 x = 'abcdefg'，则表达式 x[3:] + x[:3] 的值为___________________。（'defgabc'）
268、一直 g = lambda x, y=3, z=5: x*y*z，则语句 print(g(1)) 的输出结果为_______。（15）
269、表达式 list(map(lambda x: len(x), ['a', 'bb', 'ccc'])) 的值为__________。（[1, 2, 3]）
270、语句 x, y, z = [1, 2, 3] 执行后，变量y的值为__________。（2）
271、Python标准库__________对Socket进行了二次封装，支持Socket接口的访问，大幅度简化了网络程序的开发。（socket）
272、Python扩展库______________中封装了Windows底层几乎所有API函数。（pywin32）
273、线程对象的___________方法用来阻塞当前线程，指定线程运行结束或超时后继续运行当前线程。（join()）
274、Python用来访问和操作内置数据库SQLite的标准库是_____________。（sqlite3）
275、用于删除数据库表test中所有name字段值为’10001’的记录的SQL语句为______________________________。（delete from test where name=’10001’）
276、Python扩展库________________完美封装了图形库OpenGL的功能。（pyopengl）
277、Python扩展库______________和______________提供了图像处理功能。（PIL、pillow）
278、已知 x = [[1,3,3], [2,3,1]]，那么表达式 sorted(x, key=lambda item:item[0]+item[2]) 的值为______________________________________。（[[2, 3, 1], [1, 3, 3]]）
279、已知 x = [[1,3,3], [2,3,1]]，那么表达式 sorted(x, key=lambda item:(item[1],item[2])) 的值为____________________________________。（[[2, 3, 1], [1, 3, 3]]）
280、已知 x = [[1,3,3], [2,3,1]]，那么表达式 sorted(x, key=lambda item:(item[1], -item[2])) 的值为____________________________________。（[[1, 3, 3], [2, 3, 1]]）
281、已知 x = {1, 2, 3}，那么执行语句 x.add(3) 之后，x的值为__________。（{1, 2, 3}）
282、已知 x = {1:1}，那么执行语句 x[2] = 2之后，len(x)的值为____________。（2）
283、已知 x = {1:1, 2:2}，那么执行语句 x[2] = 4之后，len(x)的值为____________。（2）
284、假设已从标准库functools导入reduce()函数，那么表达式 reduce(lambda x, y: x-y, [1, 2, 3]) 的值为____。（-4）
285、假设已从标准库functools导入reduce()函数，那么表达式 reduce(lambda x, y: x+y, [1, 2, 3]) 的值为____。（6）
286、已知有函数定义 def demo(*p):return sum(p)，那么表达式 demo(1, 2, 3) 的值为______、表达式 demo(1, 2, 3, 4) 的值为_________。（6、10）
287、已知列表 x = [1, 2]，那么连续执行命令 y = x和 y.append(3) 之后，x的值为________。（[1, 2, 3]）
288、已知列表 x = [1, 2]，那么连续执行命令 y = x[:] 和 y.append(3) 之后，x的值为________。（[1, 2]）
289、已知列表 x = [1, 2]，执行语句 y = x[:] 后，表达式 id(x) == id(y) 的值为_______。（False）
290、已知列表 x = [1, 2]，执行语句 y = x 后，表达式 id(x) == id(y) 的值为_______。（True）
291、已知列表 x = [1, 2]，执行语句 y = x 后，表达式 x is y 的值为_______。（True）
292、已知列表 x = [1, 2]，执行语句 y = x[:] 后，表达式 x is not y 的值为_______。（True）
293、表达式 sorted(random.sample(range(5), 5)) 的值为_________________________。（[0, 1, 2, 3, 4]）
294、表达式 [i for i in range(10) if i>8] 的值为________________。（[9]）
295、已知有列表 x = [[1, 2, 3], [4, 5, 6]]，那么表达式 [[row[i] for row in x] for i in range(len(x[0]))] 的值为___________________________。（[[1, 4], [2, 5], [3, 6]]）
296、执行语句 x,y,z = map(str, range(3)) 之后，变量y的值为___________。（'1'）
297、已知列表 x = [1, 2]，那么执行语句 x.extend([3]) 之后， x的值为____________。（[1, 2, 3]）
298、已知列表 x = [1, 2]，那么执行语句 x.append([3]) 之后，x的值为_____________。（[1, 2, [3]]）
299、表达式 'aaasdf'.lstrip('as') 的值为________________。（'df'）
300、表达式 'aaasdf'.lstrip('af') 的值为________________。（'sdf'）
301、表达式 'aaasdf'.strip('af') 的值为______________。（'sd'）
302、表达式 'aaasdf'.rstrip('af') 的值为_______________。（'aaasd'）
303、已知 f = lambda x: x+5，那么表达式 f(3) 的值为________。（8）
304、表达式 print(0b10101) 的值为____________。（21）
305、表达式 '\x41' == 'A' 的值为_____________。（True）
306、已知 x = [1, 2, 3, 4, 5]，那么执行语句 del x[:3] 之后，x的值为__________。（[4, 5]）
307、表达式 sorted(['abc', 'acd', 'ade'], key=lambda x:(x[0],x[2])) 的值为_____________。（['abc', 'acd', 'ade']）
308、已知 x = range(1,4) 和 y = range(4,7)，那么表达式 sum([i*j for i,j in zip(x,y)]) 的值为__________。（32）
309、表达式 [5 for i in range(3)] 的值为_______________。（[5, 5, 5]）
310、表达式 {1, 2, 3} == {1, 3, 2} 的值为___________。（True）
311、表达式 [1, 2, 3] == [1, 3, 2] 的值为____________。（False）
312、已知 x = [1, 2, 1]，那么表达式 id(x[0]) == id(x[2]) 的值为_______________。（True）
313、表达式 3 not in [1, 2, 3]的值为__________。（False）
314、已知 x = [1, 2]，那么执行语句 x[0:0] = [3, 3]之后，x的值为___________。（[3, 3, 1, 2]）
315、已知 x = [1, 2]，那么执行语句 x[0:1] = [3, 3]之后，x的值为___________。（[3, 3, 2]）
316、已知 x = [1, 2, 3, 4, 5]，那么执行语句 del x[1:3] 之后，x的值为____________。（[1, 4, 5]）
317、已知 x = [[1, 2, 3,], [4, 5, 6]]，那么表达式 sum([i*j for i,j in zip(*x)]) 的值为______。（32）
318、已知列表 x = [1, 2, 3] 和 y = [4, 5, 6]，那么表达式 [(i,j) for i, j in zip(x,y) if i==3] 的值为____________。（[(3, 6)]）
319、已知列表 x = [1.0, 2.0, 3.0]，那么表达式 sum(x)/len(x) 的值为___________。（2.0）
320、表达式 'abc' in ('abcdefg') 的值为______________。（True）
321、表达式 'abc' in ['abcdefg'] 的值为______________。（False）
322、已知 x = {1:2, 2:3, 3:4}，那么表达式 sum(x) 的值为___________。（6）
323、已知 x = {1:2, 2:3, 3:4}，那么表达式 sum(x.values()) 的值为_________。（9）
324、已知 x = [3, 2, 3, 3, 4]，那么表达式 [index for index, value in enumerate(x) if value==3] 的值为____________。（[0, 2, 3]）
325、表达式 1234%1000//100 的值为___________。（2）
326、正则表达式模块re的__________方法用来编译正则表达式对象。（compile()）
327、正则表达式模块re的______________方法用来在字符串开始处进行指定模式的匹配。（match()）
328、正则表达式模块re的______________方法用来在整个字符串中进行指定模式的匹配。（search()）
329、表达式 re.search(r'\w*?(?P<f>\b\w+\b)\s+(?P=f)\w*?', 'Beautiful is is better than ugly.').group(0) 的值为___________。（'is is'）
330、已知 g = lambda x, y=3, z=5: x+y+z，那么表达式 g(2) 的值为________。（10）
331、假设有Python程序文件abc.py，其中只有一条语句print(__name__)，那么直接运行该程序时得到的结果为_____________。（__main__）
332、表达式 3 in {1, 2, 3} 的值为_________。（True）
333、表达式 'ac' in 'abce' 的值为_____________。（False）
334、表达式 not 3 的值为________________。（False）
335、表达式 3 // 5 的值为_______________。（0）
336、表达式 [1, 2] + [3] 的值为__________________。（[1, 2, 3]）
337、表达式 (1,) + (2,) 的值为_____________。（(1, 2)）
338、表达式 (1) + (2) 的值为____________。（3）
339、已知 x, y = map(int, ['1', '2'])，那么表达式 x + y 的值为_______。（3）
340、已知列表 x = list(range(5))，那么执行语句 x.remove(3) 之后，表达式 x.index(4) 的值为________。（3）
341、已知列表 x = [1, 3, 2]，那么执行语句 x.reverse() 之后，x的值为____________。（[2, 3, 1]）
342、已知列表 x = [1, 3, 2]，那么执行语句 x = x.reverse() 之后，x的值为____________。（None）
343、已知x为非空列表，那么表达式 x.reverse() == list(reversed(x)) 的值为__________。（False）
344、已知x为非空列表，那么表达式 x.sort() == sorted(x) 的值为__________。（False）
345、已知列表 x = [1, 3, 2]，那么执行语句 y = list(reversed(x)) 之后，x的值为__________。（[1, 3, 2]）
346、已知列表 x = [1, 3, 2]，那么执行语句 y = list(reversed(x)) 之后，y的值为__________。（[2, 3, 1]）
347、表达式 'Beautiful is better than ugly.'.startswith('Be', 5) 的值为_________。（False）
348、已知列表x中包含超过5个以上的元素，那么表达式 x == x[:5]+x[5:] 的值为________。（True）
349、已知字典 x = {i:str(i+3) for i in range(3)}，那么表达式 sum(x) 的值为______。（3）
350、已知字典 x = {i:str(i+3) for i in range(3)}，那么表达式 ''.join(x.values()) 的值为____________。（'345'）
351、已知字典 x = {i:str(i+3) for i in range(3)}，那么表达式 sum(item[0] for item in x.items()) 的值为___________。（3）
352、已知字典 x = {i:str(i+3) for i in range(3)}，那么表达式 ''.join([item[1] for item in x.items()]) 的值为_____________。（'345'）
353、已知列表 x = [1, 3, 2]，那么表达式 [value for index, value in enumerate(x) if index==2] 的值为_______________。（[2]）
354、已知列表 x = [1, 3, 2]，那么执行语句 a, b, c = sorted(x) 之后，b的值为____。（2）
355、已知列表 x = [1, 3, 2]，那么执行语句 a, b, c = map(str,sorted(x)) 之后，c的值为______。（'3'）
356、表达式 set([1,2,3]) == {1, 2, 3} 的值为____________。（True）
357、表达式 set([1,2, 2,3]) == {1, 2, 3} 的值为____________。（True）
358、表达式 '%c'%65 == str(65) 的值为___________。（False）
359、表达式 '%s'%65 == str(65) 的值为_____________。（True）
360、表达式 chr(ord('b')^32) 的值为_________。（'B'）
361、表达式 'abc' in 'abdcefg' 的值为_____________。（False）
362、已知函数定义 def func(*p):return sum(p)，那么表达式 func(1,2,3) 的值为______。（6）
363、已知函数定义 def func(*p):return sum(p)，那么表达式 func(1,2,3, 4) 的值为______。（10）
364、已知函数定义 def func(**p):return sum(p.values())，那么表达式 func(x=1, y=2, z=3) 的值为________。（6）
365、已知函数定义 def func(**p):return ''.join(sorted(p))，那么表达式  func(x=1, y=2, z=3)的值为__________。（'xyz'）
366、已知x为整数变量，那么表达式 int(hex(x), 16) == x 的值为_____________。（True）
367、已知 f = lambda x: 5，那么表达式 f(3)的值为_____________。（5）
368、已知 x, y = 3, 5，那么执行x, y = y, x 之后，x的值为__________。（5）
369、已知 x = 'abcd' 和 y = 'abcde'，那么表达式 [i==j for i,j in zip(x,y)] 的值为________________。（[True, True, True, True]）
判断题
1、Python是一种跨平台、开源、免费的高级动态编程语言。（对）
2、Python 3.x完全兼容Python 2.x。（错）
3、Python 3.x和Python 2.x唯一的区别就是：print在Python 2.x中是输出语句，而在Python 3.x中是输出函数。（错）
4、在Windows平台上编写的Python程序无法在Unix平台运行。（错）
5、不可以在同一台计算机上安装多个Python版本。（错）
6、已知 x = 3，那么赋值语句 x = 'abcedfg' 是无法正常执行的。（错）
7、继承自threading.Thread类的派生类中不能有普通的成员方法。（错）
8、扩展库os中的方法remove()可以删除带有只读属性的文件。（错）
9、使用内置函数open()且以”w”模式打开的文件，文件指针默认指向文件尾。（错）
10、使用内置函数open()打开文件时，只要文件路径正确就总是可以正确打开的。（错）
11、Python变量使用前必须先声明，并且一旦声明就不能再当前作用域内改变其类型。（错）
12、Python采用的是基于值得自动内存管理方式。（对）
13、在任何时刻相同的值在内存中都只保留一份（错）
14、Python不允许使用关键字作为变量名，允许使用内置函数名作为变量名，但这会改变函数名的含义。（对）
15、在Python中可以使用if作为变量名。（错）
16、在Python 3.x中可以使用中文作为变量名。（对）
17、Python变量名必须以字母或下划线开头，并且区分字母大小写。（对）
18、加法运算符可以用来连接字符串并生成新字符串。（对）
19、9999**9999这样的命令在Python中无法运行。（错）
20、3+4j不是合法的Python表达式。（错）
21、0o12f是合法的八进制数字。（错）
22、Python 2.x和Python 3.x中input()函数的返回值都是字符串。（错）
23、pip命令也支持扩展名为.whl的文件直接安装Python扩展库。（对）
24、只有Python扩展库才需要导入以后才能使用其中的对象，Python标准库不需要导入即可使用其中的所有对象和方法。（错）
25、在Python中0xad是合法的十六进制数字表示形式。（对）
26、3+4j 是合法Python数字类型。（对）
27、在Python中0oa1是合法的八进制数字表示形式。（错）
28、Python使用缩进来体现代码之间的逻辑关系。（对）
29、Python代码的注释只有一种方式，那就是使用#符号。（错）
30、调用函数时，在实参前面加一个型号*表示序列解包。（对）
31、放在一对三引号之间的内容将被认为是注释。（错）
32、Python支持使用字典的“键”作为下标来访问字典中的值。（对）
33、列表可以作为字典的“键”。（错）
34、元组可以作为字典的“键”。（对）
35、字典的“键”必须是不可变的。（对）
36、尽管可以使用import语句一次导入任意多个标准库或扩展库，但是仍建议每次只导入一个标准库或扩展库。（对）
37、为了让代码更加紧凑，编写Python程序时应尽量避免加入空格和空行。（错）
38、在Python 3.5中运算符+不仅可以实现数值的相加、字符串连接，还可以实现列表、元组的合并和集合的并集运算。（错）
39、已知x为非空列表，那么表达式 sorted(x, reverse=True) == list(reversed(x)) 的值一定是True。（错）
40、已知x为非空列表，那么x.sort(reverse=True)和x.reverse()的作用是等价的。（错）
41、生成器推导式比列表推导式具有更高的效率，推荐使用。（对）
42、Python集合中的元素不允许重复。（对）
43、Python集合可以包含相同的元素。（错）
44、Python字典中的“键”不允许重复。（对）
45、Python字典中的“值”不允许重复。（错）
46、Python集合中的元素可以是元组。（对）
47、Python集合中的元素可以是列表。（错）
48、Python字典中的“键”可以是列表。（错）
49、Python字典中的“键”可以是元组。（对）
50、Python列表中所有元素必须为相同类型的数据。（错）
51、Python列表、元组、字符串都属于有序序列。（对）
52、在Python 3.x中语句 print(*[1,2,3]) 不能正确执行。（错）
53、已知A和B是两个集合，并且表达式A<B的值为False，那么表达式A>B的值一定为True。（错）
54、列表对象的append()方法属于原地操作，用于在列表尾部追加一个元素。（对）
55、对于列表而言，在尾部追加元素比在中间位置插入元素速度更快一些，尤其是对于包含大量元素的列表。（对）
56、假设有非空列表x，那么x.append(3)、x = x+[3]与x.insert(0,3)在执行时间上基本没有太大区别。（错）
57、使用Python列表的方法insert()为列表插入元素时会改变列表中插入位置之后元素的索引。（对）
58、假设x为列表对象，那么x.pop()和x.pop(-1)的作用是一样的。（对）
59、使用del命令或者列表对象的remove()方法删除列表中元素时会影响列表中部分元素的索引。（对）
60、带有else子句的循环如果因为执行了break语句而退出的话，则会执行else子句中的代码。（错）
61、对于带有else子句的循环语句，如果是因为循环条件表达式不成立而自然结束循环，则执行else子句中的代码。（对）
62、已知列表 x = [1, 2, 3]，那么执行语句 x = 3 之后，变量x的地址不变。（错）
63、在UTF-8编码中一个汉字需要占用3个字节。（对）
64、在GBK和CP936编码中一个汉字需要2个字节。（对）
65、如果仅仅是用于控制循环次数，那么使用for i in range(20)和for i in range(20, 40)的作用是等价的。（对）
66、使用列表对象的remove()方法可以删除列表中首次出现的指定元素，如果列中不存在要删除的指定元素则抛出异常。（对）
67、元组是不可变的，不支持列表对象的inset()、remove()等方法，也不支持del命令删除其中的元素，但可以使用del命令删除整个元组对象。（对）
68、Python字典和集合属于无序序列。（对）
69、无法删除集合中指定位置的元素，只能删除特定值的元素。（对）
70、元组的访问速度比列表要快一些，如果定义了一系列常量值，并且主要用途仅仅是对其进行遍历二不需要进行任何修改，建议使用元组而不使用列表。（对）
71、当以指定“键”为下标给字典对象赋值时，若该“键”存在则表示修改该“键”对应的“值”，若不存在则表示为字典对象添加一个新的“键-值对”。（对）
72、假设x是含有5个元素的列表，那么切片操作x[10:]是无法执行的，会抛出异常。（错）
73、只能对列表进行切片操作，不能对元组和字符串进行切片操作。（错）
74、只能通过切片访问列表中的元素，不能使用切片修改列表中的元素。（错）
75、只能通过切片访问元组中的元素，不能使用切片修改元组中的元素。（对）
76、字符串属于Python有序序列，和列表、元组一样都支持双向索引。（对）
77、Python字典和集合支持双向索引。（错）
78、使用print()函数无法将信息写入文件。（错）
79、Python集合不支持使用下标访问其中的元素。（对）
80、相同内容的字符串使用不同的编码格式进行编码得到的结果并不完全相同。（对）
81、删除列表中重复元素最简单的方法是将其转换为集合后再重新转换为列表。（对）
82、已知列表x中包含超过5个以上的元素，那么语句 x = x[:5]+x[5:] 的作用是将列表x中的元素循环左移5位。（错）
83、对于生成器对象x = (3 for i in range(5))，连续两次执行list(x)的结果是一样的。（错）
84、在循环中continue语句的作用是跳出当前循环。（错）
85、在编写多层循环时，为了提高运行效率，应尽量减少内循环中不必要的计算。（对）
86、Python 3.x支持使用中文作为变量名。（对）
87、在Python中，任意长的字符串都遵守驻留机制。（错）
88、Python运算符%不仅可以用来求余数，还可以用来格式化字符串。（对）
89、Python字符串方法replace()对字符串进行原地修改。（错）
90、如果需要连接大量字符串成为一个字符串，那么使用字符串对象的join()方法比运算符+具有更高的效率。（对）
91、对于大量列表的连接，extend()方法比运算符+具有更高的效率。（对）
92、表达式 {1, 3, 2} > {1, 2, 3} 的值为True。（错）
93、列表对象的extend()方法属于原地操作，调用前后列表对象的地址不变。（对）
94、正则表达式模块re的match()方法是从字符串的开始匹配特定模式，而search()方法是在整个字符串中寻找模式，这两个方法如果匹配成功则返回match对象，匹配失败则返回空值None。（对）
95、函数是代码复用的一种方式。（对）
96、定义函数时，即使该函数不需要接收任何参数，也必须保留一对空的圆括号来表示这是一个函数。（对）
97、编写函数时，一般建议先对参数进行合法性检查，然后再编写正常的功能代码。（对）
98、一个函数如果带有默认值参数，那么必须所有参数都设置默认值。（错）
99、定义Python函数时必须指定函数返回值类型。（错）
100、定义Python函数时，如果函数中没有return语句，则默认返回空值None。（对）
101、如果在函数中有语句 return 3，那么该函数一定会返回整数3。（错）
102、函数中必须包含return语句。（错）
103、函数中的return语句一定能够得到执行。（错）
104、不同作用域中的同名变量之间互相不影响，也就是说，在不同的作用域内可以定义同名的变量。（对）
105、全局变量会增加不同函数之间的隐式耦合度，从而降低代码可读性，因此应尽量避免过多使用全局变量。（对）
106、函数内部定义的局部变量当函数调用结束后被自动删除。（对）
107、在函数内部，既可以使用global来声明使用外部全局变量，也可以使用global直接定义全局变量。（对）
108、在函数内部没有办法定义全局变量。（错）
109、对于数字n，如果表达式 0 not in [n%d for d in range(2, n)] 的值为True则说明n是素数。（对）
110、表达式 ‘a’+1的值为’b’。（错）
111、在函数内部直接修改形参的值并不影响外部实参的值。（对）
112、在函数内部没有任何方法可以影响实参的值。（错）
113、调用带有默认值参数的函数时，不能为默认值参数传递任何值，必须使用函数定义时设置的默认值。（错）
114、创建只包含一个元素的元组时，必须在元素后面加一个逗号，例如(3,)。（对）
115、在同一个作用域内，局部变量会隐藏同名的全局变量。（对）
116、形参可以看做是函数内部的局部变量，函数运行结束之后形参就不可访问了。（对）
117、假设已导入random标准库，那么表达式 max([random.randint(1, 10) for i in range(10)]) 的值一定是10。（错）
118、Python标准库random的方法randint(m,n)用来生成一个[m,n]区间上的随机整数。（对）
119、Python中一切内容都可以称为对象。（对）
120、栈和队列的都具有先入后出的特点。（错）
121、在一个软件的设计与开发中，所有类名、函数名、变量名都应该遵循统一的风格和规范。（对）
122、定义类时所有实例方法的第一个参数用来表示对象本身，在类的外部通过对象名来调用实例方法时不需要为该参数传值。（对）
123、在面向对象程序设计中，函数和方法是完全一样的，都必须为所有参数进行传值。（错）
124、Python中没有严格意义上的私有成员。（对）
125、在Python中定义类时，运算符重载是通过重写特殊方法实现的。例如，在类中实现了__mul__()方法即可支持该类对象的**运算符。（错）
126、在IDLE交互模式下，一个下划线“_”表示解释器中最后一次显示的内容或最后一次语句正确执行的输出结果。（对）
127、对于Python类中的私有成员，可以通过“对象名._类名__私有成员名”的方式来访问。（对）
128、运算符 / 在Python 2.x和Python 3.x中具有相同的功能。（错）
129、运算符“-”可以用于集合的差集运算。（对）
130、如果定义类时没有编写析构函数，Python将提供一个默认的析构函数进行必要的资源清理工作。（对）
131、已知seq为长度大于10的列表，并且已导入random模块，那么[random.choice(seq) for i in range(10)]和random.sample(seq,10)等价。（错）
132、在派生类中可以通过“基类名.方法名()”的方式来调用基类中的方法。（对）
133、Python支持多继承，如果父类中有相同的方法名，而在子类中调用时没有指定父类名，则Python解释器将从左向右按顺序进行搜索。（对）
134、对文件进行读写操作之后必须显式关闭文件以确保所有内容都得到保存。（对）
135、Python标准库os中的方法startfile()可以启动任何已关联应用程序的文件，并自动调用关联的程序。（对）
136、程序中异常处理结构在大多数情况下是没必要的。（错）
137、在try...except...else结构中，如果try块的语句引发了异常则会执行else块中的代码。（错）
138、Python标准库threading中的Lock、RLock、Condition、Event、Semaphore对象都可以用来实现线程同步。（对）
139、异常处理结构中的finally块中代码仍然有可能出错从而再次引发异常。（对）
140、在GUI设计中，复选框往往用来实现非互斥多选的功能，多个复选框之间的选择互不影响。（对）
141、在GUI设计中，单选按钮用来实现用户在多个选项中的互斥选择，在同一组内多个选项中只能选择一个，当选择发生变化之后，之前选中的选项自动失效。（对）
142、在Python中定义类时实例方法的第一个参数名称必须是self。（错）
143、在Python中定义类时实例方法的第一个参数名称不管是什么，都表示对象自身。（对）
144、Python代码可以内嵌在asp文件中。（对）
145、无法配置IIS来支持Python程序的运行。（错）
146、Python标准库os中的方法startfile()可以用来打开外部程序或文件，系统会自动关联相应的程序来打开或执行指定的文件。（对）
147、在编写应用程序时，应合理控制线程数量，线程并不是越多越好。（对）
148、在多线程编程时，当某子线程的daemon属性为False时，主线程结束时会检测该子线程是否结束，如果该子线程尚未运行结束，则主线程会等待它完成后再退出。（对）
149、Python只能使用内置数据库SQLite，无法访问MS SQLServer、ACCESS或Oracle、MySQL等数据库。（错）
150、使用OpenGL画图时，画点是最基本的操作，具体生成的图形由glBegin()函数指定的mode来决定。例如，mode值为GL_TRIANGLES时表示将要绘制三角形。（对）
151、OpenGL采用的“状态机”工作方式，一旦设置了某种状态以后，除非显式修改该状态，否则该状态将一直保持。（对）
152、假设os模块已导入，那么列表推导式 [filename for filename in os.listdir('C:\\Windows') if filename.endswith('.exe')] 的作用是列出C:\Windows文件夹中所有扩展名为.exe的文件。（对）
153、表达式 list('[1, 2, 3]') 的值是[1, 2, 3]。（错）
154、在函数内部没有任何声明的情况下直接为某个变量赋值，这个变量一定是函数内部的局部变量。（对）
155、定义类时如果实现了__contains__()方法，该类对象即可支持成员测试运算in。（对）
156、定义类时如果实现了__len__()方法，该类对象即可支持内置函数len()。（对）
157、定义类时实现了__eq__()方法，该类对象即可支持运算符==。（对）
158、定义类时实现了__pow__()方法，该类对象即可支持运算符**。（对）
159、二进制文件不能使用记事本程序打开。（错）
160、使用普通文本编辑器软件也可以正常查看二进制文件的内容。（错）
161、二进制文件也可以使用记事本或其他文本编辑器打开，但是一般来说无法正常查看其中的内容。（对）
162、Python标准库os中的方法isfile()可以用来测试给定的路径是否为文件。（对）
163、Python标准库os中的方法exists()可以用来测试给定路径的文件是否存在。（对）
164、Python标准库os中的方法isdir()可以用来测试给定的路径是否为文件夹。（对）
165、Python标准库os中的方法listdir()返回包含指定路径中所有文件和文件夹名称的列表。（对）
166、Python扩展库xlwt支持对Excel 2003或更低版本的Excel文件进行写操作。（对）
167、Python扩展库xlrd支持对Excel 2003或更低版本的Excel文件进行读操作。（对）
168、带有else子句的异常处理结构，如果不发生异常则执行else子句中的代码。（对）
169、异常处理结构也不是万能的，处理异常的代码也有引发异常的可能。（对）
170、在异常处理结构中，不论是否发生异常，finally子句中的代码总是会执行的。（对）
171、在Python中定义函数时不需要声明函数参数的类型。（对）
172、在Python中定义函数时不需要声明函数的返回值类型。（对）
173、在函数中没有任何办法可以通过形参来影响实参的值。（错）
174、已知 x = 3，那么执行语句 x+=6 之后，x的内存地址不变。（错）
175、已知x为非空字符串，那么表达式 ''.join(x.split()) == x 的值一定为True。（错）
176、已知x为非空字符串，那么表达式 ','.join(x.split(',')) == x 的值一定为True。（对）
177、在Python中可以使用 for 作为变量名。（错）
178、在Python中可以使用 id 作为变量名，尽管不建议这样做。（对）
179、Python关键字不可以作为变量名。（对）
180、一个数字5也是合法的Python表达式。（对）
181、同一个列表对象中的元素类型可以各不相同。（对）
182、同一个列表对象中所有元素必须为相同类型。（错）
183、已知x为非空列表，那么执行语句x[0] = 3之后，列表对象x的内存地址不变。（对）
184、列表可以作为集合的元素。（错）
185、集合可以作为列表的元素。（对）
186、元组可以作为集合的元素。（对）
187、集合可以作为元组的元素。（对）
188、字典可以作为集合的元素。（错）
189、集合可以作为字典的键。（错）
190、集合可以作为字典的值。（对）
191、可以使用del删除集合中的部分元素。（错）
192、标准库os的rename()方法可以实现文件移动操作。（对）
193、标准库os的listdir()方法默认只能列出指定文件夹中当前层级的文件和文件夹列表，而不能列出其子文件夹中的文件。（对）
194、当作为条件表达式时，[]与None等价。（对）
195、表达式 [] == None 的值为True。（错）
196、当作为条件表达式时，{}与None等价。（对）
197、表达式 {}==None 的值为True。（错）
198、表达式 pow(3,2) == 3**2 的值为True。（对）
199、当作为条件表达式时，空值、空字符串、空列表、空元组、空字典、空集合、空迭代对象以及任意形式的数字0都等价于False。（对）
200、在定义函数时，某个参数名字前面带有一个*符号表示可变长度参数，可以接收任意多个普通实参并存放于一个元组之中。（对）
201、在定义函数时，某个参数名字前面带有两个*符号表示可变长度参数，可以接收任意多个关键参数并将其存放于一个字典之中。（对）
202、定义函数时，带有默认值的参数必须出现在参数列表的最右端，任何一个带有默认值的参数右边不允许出现没有默认值的参数。（对）
203、在调用函数时，可以通过关键参数的形式进行传值，从而避免必须记住函数形参顺序的麻烦。（对）
204、在调用函数时，必须牢记函数形参顺序才能正确传值。（错）
205、调用函数时传递的实参个数必须与函数形参个数相等才行。（错）
206、正则表达式对象的match()方法可以在字符串的指定位置开始进行指定模式的匹配。（对）
207、使用正则表达式对字符串进行分割时，可以指定多个分隔符，而字符串对象的split()方法无法做到这一点。（对）
208、在编写函数时，建议首先对形参进行类型检查和数值范围检查之后再编写功能代码，或者使用异常处理结构，尽量避免代码抛出异常而导致程序崩溃。（对）
209、执行语句 from math import sin 之后，可以直接使用 sin() 函数，例如 sin(3)。（对）
210、列表对象的pop()方法默认删除并返回最后一个元素，如果列表已空则抛出异常。（对）
211、在Python中定义类时，如果某个成员名称前有2个下划线则表示是私有成员。（对）
212、在类定义的外部没有任何办法可以访问对象的私有成员。（错）
213、可以使用py2exe或pyinstaller等扩展库把Python源程序打包成为exe文件，从而脱离Python环境在Windows平台上运行。（对）
214、Python程序只能在安装了Python环境的计算机上以源代码形式运行。（错）
215、不同版本的Python不能安装到同一台计算机上。（错）
216、一般来说，Python扩展库没有通用于所有版本Python的，安装时应选择与已安装Python的版本对应的扩展库。
217、表达式 {1, 2} * 2 的值为 {1, 2, 1, 2}。（错）
218、Python变量名区分大小写，所以student和Student不是同一个变量。（对）
219、正则表达式元字符“^”一般用来表示从字符串开始处进行匹配，用在一对方括号中的时候则表示反向匹配，不匹配方括号中的字符。（对）
220、正则表达式元字符“\s”用来匹配任意空白字符。（对）
221、正则表达式 元字符“\d”用来匹配任意数字字符。（对）
222、lambda表达式中可以使用任意复杂的表达式，但是必须只编写一个表达式。（对）
223、Python类的构造函数是__init__()。（对）
224、定义类时，在一个方法前面使用@classmethod进行修饰，则该方法属于类方法。（对）
225、定义类时，在一个方法前面使用@staticmethod进行休息，则该方法属于静态方法。（对）
226、通过对象不能调用类方法和静态方法。（错）
227、在Python中可以为自定义类的对象动态增加新成员。（对）
228、Python类不支持多继承。（错）
229、属性可以像数据成员一样进行访问，但赋值时具有方法的优点，可以对新值进行检查。（对）
230、文件对象是可以迭代的。（对）
231、文件对象的tell()方法用来返回文件指针的当前位置。（对）
232、以写模式打开的文件无法进读操作。（对）
233、假设已成功导入os和sys标准库，那么表达式 os.path.dirname(sys.executable) 的值为Python安装目录。（对）
234、只可以动态为对象增加数据成员，而不能为对象动态增加成员方法。（错）
235、Python字典支持双向索引。（错）
236、Python集合支持双向索引。（错）
237、Python元组支持双向索引。（对）
238、假设re模块已成功导入，并且有 pattern = re.compile('^'+'\.'.join([r'\d{1,3}' for i in range(4)])+'$')，那么表达式 pattern.match('192.168.1.103') 的值为None。（错）
239、假设random模块已导入，那么表达式 random.sample(range(10), 20) 的作用是生成20个不重复的整数。（错）
240、假设random模块已导入，那么表达式 random.sample(range(10), 7) 的作用是生成7个不重复的整数。（对）
